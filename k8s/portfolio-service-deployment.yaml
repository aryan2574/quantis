apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-service
  namespace: quantis-trading
  labels:
    app: portfolio-service
    component: core
spec:
  replicas: 2
  selector:
    matchLabels:
      app: portfolio-service
  template:
    metadata:
      labels:
        app: portfolio-service
        component: core
    spec:
      containers:
        - name: portfolio-service
          image: quantis/portfolio-service:latest
          ports:
            - containerPort: 8082
              name: http
            - containerPort: 9090
              name: grpc
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
            - name: DATABASE_URL
              value: "jdbc:postgresql://postgres-service:5432/quantisdb"
            - name: REDIS_URL
              value: "redis://redis-service:6379"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "kafka-service:9092"
          envFrom:
            - configMapRef:
                name: quantis-config
            - secretRef:
                name: quantis-secrets
          resources:
            requests:
              cpu: 300m
              memory: 1Gi
            limits:
              cpu: 1500m
              memory: 3Gi
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: portfolio-service
  namespace: quantis-trading
spec:
  type: ClusterIP
  ports:
    - port: 8082
      targetPort: 8082
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: grpc
  selector:
    app: portfolio-service
